[ ] Keep unittests and nose coverage up to date

[ ] Document with Sphinx
    http://packages.python.org/an_example_pypi_project/sphinx.html

[x] Implement basic Mongo stuff

[x] Implement Elastic stuff

[x] Implement RESTful views (for CRUD, "forms" and search)

[ ] Setup a pcreate scaffold, and create a demo app that uses it.
    See http://docs.pylonsproject.org/projects/pyramid/en/1.4-branch/narr/scaffolding.html
    The demo app could include a frontend that uses Knockout.
    What should the demo app be?  A blog maybe?

[x] Flesh out support for inter-object references and be sure to link
    to referenced objects in "_links" section of object GET view
    (with a new namespaced "ref" rel)

[ ] Create a utility for keeping references on the other end of
    many-to-many relationships up to date when a context object is saved.

[x] Add support for files and GridFS
[ ] Index files in Elastic using its support for attachments?

[ ] In REST views, treat files as separate resources.
    Example: /people/sam-brauer/photo (GET, PUT, DELETE)
    If an object has a list of files, support POST too:
    Example: /galleries/robots/photos/

[ ] Implement HierarchicalCollection and FolderObject

[ ] Take a closer look at pyelasticsearch as an alternative to pyes
