[ ] Keep unittests and nose coverage up to date

[ ] Document with Sphinx
    http://packages.python.org/an_example_pypi_project/sphinx.html

[x] Implement basic Mongo stuff

[x] Implement Elastic stuff

[ ] Implement RESTful views (for CRUD, "forms" and search)

    Pyramid json references:
    http://docs.pylonsproject.org/projects/pyramid/en/1.4-branch/api/renderers.html?highlight=json#pyramid.renderers.JSON
    http://docs.pylonsproject.org/projects/pyramid/en/1.4-branch/narr/renderers.html#json-serializing-custom-objects
    http://docs.pylonsproject.org/projects/pyramid/en/1.4-branch/narr/webob.html#dealing-with-a-json-encoded-request-body

    To handle PUT requests on a resource that doesn't yet exist,
    try hooking into the NotFound view (http://docs.pylonsproject.org/projects/pyramid/en/1.0-branch/narr/hooks.html)
    Something like this:
    def notfound_view(request):
        if request.method == 'PUT':
            if isinstance(request.context, audrey.resources.NamingCollection):
                # Get next path component from URL and try to use as an ID
                # to create a new object.
                # FIXME: what if id isn't valid?
                # FIXME: If collection is heterogenous, how do we determine
                # the object type to try to create?
                # Perhaps a custom request header or a "_object_type" key
                # in the JSON request body.
                return result similar to collection_post()
        # Just do a normal 404
        return HTTPNotFound()


[ ] Setup a pcreate scaffold, and create a demo app that uses it.
    See http://docs.pylonsproject.org/projects/pyramid/en/1.4-branch/narr/scaffolding.html
    The demo app could include a frontend that uses Knockout.
    What should the demo app be?  A blog maybe?

[ ] Add support for files and GridFS (and Elastic attachment support?)

[ ] In REST views, treat files as separate resources.
    Example: /people/sam-brauer/photo (GET, PUT, DELETE)
    If an object has a list of files, support POST too:
    Example: /galleries/robots/photos/

[ ] Implement HierarchicalCollection and FolderObject

[ ] Take a closer look at pyelasticsearch as an alternative to pyes
